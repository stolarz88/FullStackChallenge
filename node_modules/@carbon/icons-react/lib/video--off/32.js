'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var iconHelpers = require('@carbon/icon-helpers');
var PropTypes = _interopDefault(require('prop-types'));
var React = _interopDefault(require('react'));

function VideoOff32({ children, ...rest }) {
  return React.createElement(
    'svg',
    iconHelpers.getAttributes(rest),
    children,
    React.createElement('path', {
      d:
        'M29.5 8.1c-.3-.2-.7-.2-1 0L23 11.3v-.9l7-7L28.6 2 2 28.6 3.4 30l4-4H21c1.1 0 2-.9 2-2v-3.3l5.5 3.1c.3.2.7.2 1 0 .3-.2.5-.5.5-.9V9c0-.4-.2-.7-.5-.9zM28 21.3l-5.5-3.1c-.3-.2-.7-.2-1 0-.3.1-.5.4-.5.8v5H9.4L21 12.4v.6c0 .4.2.7.5.9.3.2.7.2 1 0l5.5-3.1v10.5zM4 24V8h16V6H4c-1.1 0-2 .9-2 2v16h2z',
    })
  );
}

VideoOff32.displayName = 'VideoOff32';
VideoOff32.propTypes = {
  'aria-hidden': PropTypes.bool,
  'aria-label': PropTypes.string,
  'aria-labelledby': PropTypes.string,
  children: PropTypes.node,
  focusable: PropTypes.bool,
  height: PropTypes.number,
  preserveAspectRatio: PropTypes.string,
  title: PropTypes.string,
  viewBox: PropTypes.string,
  width: PropTypes.number,
  xmlns: PropTypes.string,
};
VideoOff32.defaultProps = {
  width: 32,
  height: 32,
  viewBox: '0 0 32 32',
  xmlns: 'http://www.w3.org/2000/svg',
  // Reference:
  // https://github.com/IBM/carbon-components-react/issues/1392
  // https://github.com/PolymerElements/iron-iconset-svg/pull/47
  focusable: false,
  preserveAspectRatio: 'xMidYMid meet',
};

module.exports = VideoOff32;
