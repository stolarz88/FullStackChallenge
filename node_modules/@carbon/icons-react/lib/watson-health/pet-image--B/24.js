'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var iconHelpers = require('@carbon/icon-helpers');
var PropTypes = _interopDefault(require('prop-types'));
var React = _interopDefault(require('react'));

function WatsonHealthPetImageB24({ children, ...rest }) {
  return React.createElement(
    'svg',
    iconHelpers.getAttributes(rest),
    children,
    React.createElement('path', {
      fill: '#000100',
      d:
        'M19 21h2v3h-2zm0-21h2v3h-2zM8 11h3v2H8zm21 0h3v2h-3zM10.816 4.216l1.4-1.4 2.122 2.12-1.4 1.401zm14.862 14.84l1.4-1.4 2.121 2.121-1.4 1.4zm-14.851.717l2.121-2.121 1.4 1.4-2.12 2.121zm14.84-14.847l2.122-2.122 1.4 1.4-2.122 2.122zM20 5a7 7 0 1 0 7 7 7 7 0 0 0-7-7zm0 12a5 5 0 0 1 0-10zM5 18H0v14h5a3 3 0 0 0 3-3v-2a3 3 0 0 0-.78-2A3 3 0 0 0 8 23v-2a3 3 0 0 0-3-3zm-3 2h3a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2zm4 9a1 1 0 0 1-1 1H2v-4h3a1 1 0 0 1 1 1zM2 2h7V0H0v9h2V2z',
    })
  );
}

WatsonHealthPetImageB24.displayName = 'WatsonHealthPetImageB24';
WatsonHealthPetImageB24.propTypes = {
  'aria-hidden': PropTypes.bool,
  'aria-label': PropTypes.string,
  'aria-labelledby': PropTypes.string,
  children: PropTypes.node,
  focusable: PropTypes.bool,
  height: PropTypes.number,
  preserveAspectRatio: PropTypes.string,
  title: PropTypes.string,
  viewBox: PropTypes.string,
  width: PropTypes.number,
  xmlns: PropTypes.string,
};
WatsonHealthPetImageB24.defaultProps = {
  width: 24,
  height: 24,
  viewBox: '0 0 32 32',
  xmlns: 'http://www.w3.org/2000/svg',
  // Reference:
  // https://github.com/IBM/carbon-components-react/issues/1392
  // https://github.com/PolymerElements/iron-iconset-svg/pull/47
  focusable: false,
  preserveAspectRatio: 'xMidYMid meet',
};

module.exports = WatsonHealthPetImageB24;
