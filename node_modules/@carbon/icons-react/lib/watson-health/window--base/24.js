'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var iconHelpers = require('@carbon/icon-helpers');
var PropTypes = _interopDefault(require('prop-types'));
var React = _interopDefault(require('react'));

function WatsonHealthWindowBase24({ children, ...rest }) {
  return React.createElement(
    'svg',
    iconHelpers.getAttributes(rest),
    children,
    React.createElement('path', {
      d:
        'M15 2h2v3h-2zm10 11h3v2h-3zM15 23h2v3h-2zM4 13h3v2H4zm2.775-6.812L8.19 4.773l2.122 2.122-1.414 1.414zm14.921.712l2.12-2.122 1.415 1.415-2.121 2.12zm-.005 14.188l1.415-1.414 2.12 2.122-1.413 1.414zm-14.913.725L8.9 19.69l1.414 1.414-2.121 2.122zM4 28h24v2H4zm12-8a6 6 0 1 0-6-6 6 6 0 0 0 6 6zm0-10v8a4 4 0 0 1 0-8z',
    })
  );
}

WatsonHealthWindowBase24.displayName = 'WatsonHealthWindowBase24';
WatsonHealthWindowBase24.propTypes = {
  'aria-hidden': PropTypes.bool,
  'aria-label': PropTypes.string,
  'aria-labelledby': PropTypes.string,
  children: PropTypes.node,
  focusable: PropTypes.bool,
  height: PropTypes.number,
  preserveAspectRatio: PropTypes.string,
  title: PropTypes.string,
  viewBox: PropTypes.string,
  width: PropTypes.number,
  xmlns: PropTypes.string,
};
WatsonHealthWindowBase24.defaultProps = {
  width: 24,
  height: 24,
  viewBox: '0 0 32 32',
  xmlns: 'http://www.w3.org/2000/svg',
  // Reference:
  // https://github.com/IBM/carbon-components-react/issues/1392
  // https://github.com/PolymerElements/iron-iconset-svg/pull/47
  focusable: false,
  preserveAspectRatio: 'xMidYMid meet',
};

module.exports = WatsonHealthWindowBase24;
