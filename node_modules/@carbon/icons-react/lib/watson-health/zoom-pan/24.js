'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var iconHelpers = require('@carbon/icon-helpers');
var PropTypes = _interopDefault(require('prop-types'));
var React = _interopDefault(require('react'));

function WatsonHealthZoomPan24({ children, ...rest }) {
  return React.createElement(
    'svg',
    iconHelpers.getAttributes(rest),
    children,
    React.createElement('path', {
      d:
        'M27.01 12l-1.41 1.41L28.18 16l-2.59 2.59L27.01 20l4-4-4-4zm-20.6 1.42L5 12l-4 4 4 4 1.42-1.41L3.83 16l2.58-2.58zM16 28.17l-2.59-2.59L12 27l4 4 4-4-1.41-1.41L16 28.17zm0-24.34l2.58 2.58L20 5l-4-4-4 4 1.41 1.42L16 3.83zM22 16a6 6 0 1 0-2.53 4.89l3.82 3.82 1.42-1.42-3.82-3.82A6 6 0 0 0 22 16zm-6 4a4 4 0 1 1 4-4 4 4 0 0 1-4 4z',
    })
  );
}

WatsonHealthZoomPan24.displayName = 'WatsonHealthZoomPan24';
WatsonHealthZoomPan24.propTypes = {
  'aria-hidden': PropTypes.bool,
  'aria-label': PropTypes.string,
  'aria-labelledby': PropTypes.string,
  children: PropTypes.node,
  focusable: PropTypes.bool,
  height: PropTypes.number,
  preserveAspectRatio: PropTypes.string,
  title: PropTypes.string,
  viewBox: PropTypes.string,
  width: PropTypes.number,
  xmlns: PropTypes.string,
};
WatsonHealthZoomPan24.defaultProps = {
  width: 24,
  height: 24,
  viewBox: '0 0 32 32',
  xmlns: 'http://www.w3.org/2000/svg',
  // Reference:
  // https://github.com/IBM/carbon-components-react/issues/1392
  // https://github.com/PolymerElements/iron-iconset-svg/pull/47
  focusable: false,
  preserveAspectRatio: 'xMidYMid meet',
};

module.exports = WatsonHealthZoomPan24;
