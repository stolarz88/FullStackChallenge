(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('@carbon/icon-helpers'), require('prop-types'), require('react')) :
  typeof define === 'function' && define.amd ? define(['@carbon/icon-helpers', 'prop-types', 'react'], factory) :
  (global.Cut32 = factory(global.CarbonIconHelpers,global.PropTypes,global.React));
}(this, (function (iconHelpers,PropTypes,React) { 'use strict';

  PropTypes = PropTypes && PropTypes.hasOwnProperty('default') ? PropTypes['default'] : PropTypes;
  React = React && React.hasOwnProperty('default') ? React['default'] : React;

  function Cut32({ children, ...rest }) {
    return React.createElement(
      'svg',
      iconHelpers.getAttributes(rest),
      children,
      React.createElement('path', {
        d:
          'M26.5 19.63L20.24 16l6.26-3.63a5 5 0 0 0-1.21-9.2A5.19 5.19 0 0 0 24 3a5 5 0 0 0-4.33 7.53 5 5 0 0 0 2.39 2.1l-3.82 2.21L4 6.6 3 8.34 16.24 16 3 23.68l1 1.74 14.24-8.26 3.82 2.21a5 5 0 0 0-2.39 2.1A5 5 0 0 0 24 29a5.19 5.19 0 0 0 1.29-.17 5 5 0 0 0 1.21-9.2zm-5.1-10.1a3 3 0 0 1 1.1-4.12 3 3 0 0 1 4.1 1.11 3 3 0 0 1-1.1 4.11 3 3 0 0 1-4.1-1.1zm5.2 16a3 3 0 0 1-4.1 1.11 3 3 0 0 1-1.1-4.12 3 3 0 0 1 4.1-1.1 3 3 0 0 1 1.1 4.06z',
      })
    );
  }

  Cut32.displayName = 'Cut32';
  Cut32.propTypes = {
    'aria-hidden': PropTypes.bool,
    'aria-label': PropTypes.string,
    'aria-labelledby': PropTypes.string,
    children: PropTypes.node,
    focusable: PropTypes.bool,
    height: PropTypes.number,
    preserveAspectRatio: PropTypes.string,
    title: PropTypes.string,
    viewBox: PropTypes.string,
    width: PropTypes.number,
    xmlns: PropTypes.string,
  };
  Cut32.defaultProps = {
    width: 32,
    height: 32,
    viewBox: '0 0 32 32',
    xmlns: 'http://www.w3.org/2000/svg',
    // Reference:
    // https://github.com/IBM/carbon-components-react/issues/1392
    // https://github.com/PolymerElements/iron-iconset-svg/pull/47
    focusable: false,
    preserveAspectRatio: 'xMidYMid meet',
  };

  return Cut32;

})));
