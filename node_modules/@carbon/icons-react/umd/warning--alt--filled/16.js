(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('@carbon/icon-helpers'), require('prop-types'), require('react')) :
  typeof define === 'function' && define.amd ? define(['@carbon/icon-helpers', 'prop-types', 'react'], factory) :
  (global.WarningAltFilled16 = factory(global.CarbonIconHelpers,global.PropTypes,global.React));
}(this, (function (iconHelpers,PropTypes,React) { 'use strict';

  PropTypes = PropTypes && PropTypes.hasOwnProperty('default') ? PropTypes['default'] : PropTypes;
  React = React && React.hasOwnProperty('default') ? React['default'] : React;

  function WarningAltFilled16({ children, ...rest }) {
    return React.createElement(
      'svg',
      iconHelpers.getAttributes(rest),
      children,
      React.createElement('path', {
        d:
          'M14.9 13.3l-6.5-12c-.1-.3-.4-.4-.6-.2-.1 0-.2.1-.2.2l-6.5 12c-.1.2-.1.3 0 .5.1.1.2.2.4.2h13c.2 0 .3-.1.4-.2.1-.2.1-.4 0-.5zM7.4 5.5h1.1v4H7.4v-4zm.6 6.7c-.4 0-.8-.3-.8-.8s.3-.8.8-.8c.4 0 .8.3.8.8s-.4.8-.8.8z',
      })
    );
  }

  WarningAltFilled16.displayName = 'WarningAltFilled16';
  WarningAltFilled16.propTypes = {
    'aria-hidden': PropTypes.bool,
    'aria-label': PropTypes.string,
    'aria-labelledby': PropTypes.string,
    children: PropTypes.node,
    focusable: PropTypes.bool,
    height: PropTypes.number,
    preserveAspectRatio: PropTypes.string,
    title: PropTypes.string,
    viewBox: PropTypes.string,
    width: PropTypes.number,
    xmlns: PropTypes.string,
  };
  WarningAltFilled16.defaultProps = {
    width: 16,
    height: 16,
    viewBox: '0 0 16 16',
    xmlns: 'http://www.w3.org/2000/svg',
    // Reference:
    // https://github.com/IBM/carbon-components-react/issues/1392
    // https://github.com/PolymerElements/iron-iconset-svg/pull/47
    focusable: false,
    preserveAspectRatio: 'xMidYMid meet',
  };

  return WarningAltFilled16;

})));
