import { getAttributes } from '@carbon/icon-helpers';
import PropTypes from 'prop-types';
import React from 'react';

function ColorPalette32({ children, ...rest }) {
  return React.createElement(
    'svg',
    getAttributes(rest),
    children,
    React.createElement('circle', { cx: '10', cy: '12', r: '2' }),
    React.createElement('circle', { cx: '16', cy: '9', r: '2' }),
    React.createElement('circle', { cx: '22', cy: '12', r: '2' }),
    React.createElement('circle', { cx: '23', cy: '18', r: '2' }),
    React.createElement('circle', { cx: '19', cy: '23', r: '2' }),
    React.createElement('path', {
      d:
        'M16.54 2A14 14 0 0 0 2 16a4.82 4.82 0 0 0 6.09 4.65l1.12-.31a3 3 0 0 1 3.79 2.9V27a3 3 0 0 0 3 3 14 14 0 0 0 14-14.54A14.05 14.05 0 0 0 16.54 2zm8.11 22.31A11.93 11.93 0 0 1 16 28a1 1 0 0 1-1-1v-3.76a5 5 0 0 0-5-5 5.07 5.07 0 0 0-1.33.18l-1.12.31A2.82 2.82 0 0 1 4 16 12 12 0 0 1 16.47 4 12.18 12.18 0 0 1 28 15.53a11.89 11.89 0 0 1-3.35 8.79z',
    })
  );
}

ColorPalette32.displayName = 'ColorPalette32';
ColorPalette32.propTypes = {
  'aria-hidden': PropTypes.bool,
  'aria-label': PropTypes.string,
  'aria-labelledby': PropTypes.string,
  children: PropTypes.node,
  focusable: PropTypes.bool,
  height: PropTypes.number,
  preserveAspectRatio: PropTypes.string,
  title: PropTypes.string,
  viewBox: PropTypes.string,
  width: PropTypes.number,
  xmlns: PropTypes.string,
};
ColorPalette32.defaultProps = {
  width: 32,
  height: 32,
  viewBox: '0 0 32 32',
  xmlns: 'http://www.w3.org/2000/svg',
  // Reference:
  // https://github.com/IBM/carbon-components-react/issues/1392
  // https://github.com/PolymerElements/iron-iconset-svg/pull/47
  focusable: false,
  preserveAspectRatio: 'xMidYMid meet',
};

export default ColorPalette32;
