(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['module', '../../globals/js/settings', '../../globals/js/feature-flags'], factory);
  } else if (typeof exports !== "undefined") {
    factory(module, require('../../globals/js/settings'), require('../../globals/js/feature-flags'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod, global.settings, global.featureFlags);
    global.notificationConfig = mod.exports;
  }
})(this, function (module, _require, _require2) {
  'use strict';

  var prefix = _require.prefix;
  var componentsX = _require2.componentsX;


  var items = [{
    type: 'info',
    title: 'Notification title',
    subtitle: 'Subtitle text goes here.',
    timestamp: 'Time stamp [00:00:00]'
  }, {
    type: 'error',
    title: 'Notification title',
    subtitle: 'Subtitle text goes here.',
    timestamp: 'Time stamp [00:00:00]'
  }, {
    type: 'success',
    title: 'Notification title',
    subtitle: 'Our goal is to become better at our craft and raise our collective knowledge by sharing experiences, best practices, what we have recently learned or what we are working on.',
    timestamp: 'Time stamp [00:00:00]'
  }, {
    type: 'warning',
    title: 'Notification title',
    subtitle: 'Subtitle text goes here.',
    timestamp: 'Time stamp [00:00:00]'
  }];

  module.exports = {
    context: {
      prefix: prefix
    },
    variants: [{
      name: 'default',
      label: 'Inline Notification',
      context: {
        variant: 'inline',
        items: items,
        componentsX: componentsX
      }
    }, {
      name: 'toast',
      label: 'Toast Notification',
      notes: '\n        Toast notifications are typically passive, meaning they won\'t affect the user\'s workflow if not addressed.\n        Toast Notifications use \'kind\' props to specify the kind of notification that should render (error, info, success, warning).\n      ',
      context: {
        variant: 'toast',
        items: items,
        componentsX: componentsX
      }
    }]
  };
});